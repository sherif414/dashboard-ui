@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

:root {
  --clr-primary: rgb(79, 70, 229);
}

.dark {
  --clr-primary: rgb(124, 58, 237);
}

html {
  scroll-behavior: smooth;
}

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-thumb {
  --at-apply: dark:bg-dark-50 bg-gray-3 rounded-full;
}

.no-scrollbar::-webkit-scrollbar {
  display: none !important;
}

.no-scrollbar {
  -ms-overflow-style: none !important;
  scrollbar-width: none !important;
}

.dark input {
  color-scheme: dark;
}

.loading {
  --loading-spinner-thickness: 2px;
  position: relative;
  width: 22px;
  height: 22px;
}

.loading::before,
.loading::after {
  --at-apply: content-none w-full h-full absolute left-0 right-0 border-transparent border-t-current dark:border-t-current rounded-full;
  border-width: var(--loading-spinner-thickness);
}

.loading::after {
  animation: spin 800ms ease infinite;
}

.loading::before {
  --at-apply: border-dashed opacity-50;
  animation: spin 800ms linear infinite;
}

.msg-enter-active,
.msg-leave-active {
  --at-apply: transition-all duration-300;
}

.msg-enter-from,
.msg-leave-to {
  --at-apply: h-0;
}

.list-move,
.list-enter-active,
.list-leave-active {
  transition: all 300ms ease;
}

/* 2. declare enter from and leave to state */
.list-enter-from,
.list-leave-to {
  opacity: 0;
  transform: scaleY(0.01) translateX(30px);
}

/* 3. ensure leaving items are taken out of layout flow so that moving
      animations can be calculated correctly. */
.list-leave-active {
  position: absolute;
  z-index: 0;
}

.fade-enter-active,
.fade-leave-active {
  --at-apply: transition-opacity duration-300;
}

.fade-enter-from,
.fade-leave-to {
  --at-apply: opacity-0;
}

.slide-left-enter-active,
.slide-left-leave-active,
.slide-right-enter-active,
.slide-right-leave-active {
  --at-apply: transition-transform ease-out duration-500 absolute h-full w-full;
}

.slide-left-enter-from,
.slide-right-leave-to {
  --at-apply: translate-x--100%;
}

.slide-left-leave-to,
.slide-right-enter-from {
  --at-apply: translate-x-100%;
}


dialog[open] {
  animation: showModal 150ms ease normal;
}

@keyframes showModal {
  from {
    scale: 80%;
  }

  to {
    scale: 100%;
  }
}

.hide-arrows[type='number']::-webkit-outer-spin-button,
.hide-arrows[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  appearance: none;
  margin: 0;
}

.hide-arrows[type='number'] {
  -moz-appearance: textfield;
  appearance: textfield;
}

#notification {
  position: fixed;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  z-index: 999999;
  left: 50%;
  transform: translateX(-50%);
  top: 70px;
}

.notification__msg {
  --at-apply: w-auto h-35px flex shrink-0 items-center justify-center p-4 transition-all duration-300 opacity-0 mt-0 mb-10px translate-y--100% shadow-md text-14px rounded-md surface-3;
}

.msg__content {

  --at-apply: max-w-500px text-ellipsis whitespace-nowrap overflow-hidden;
}

.notification__msg svg {

  --at-apply: w-4 h-4 mr-3 !important;
}

.msg--normal {
  --at-apply: typo-clr-base;
}

.msg--error {
  --at-apply: text-error;
}

.msg--success {
  --at-apply: text-success;
}

.msg--info {
  --at-apply: typo-clr-primary;
}

.msg--warn {
  --at-apply: text-warn;
}

.msg--icon {
  --at-apply: flex;
}

.msg--show {

  --at-apply: opacity-100 translate-y-0;
}

.msg--hide {

  --at-apply: opacity-0 mt--45px;

}