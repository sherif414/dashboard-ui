/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/products": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          created_at?: parameters["rowFilter.products.created_at"];
          name?: parameters["rowFilter.products.name"];
          price?: parameters["rowFilter.products.price"];
          stock?: parameters["rowFilter.products.stock"];
          discount?: parameters["rowFilter.products.discount"];
          published?: parameters["rowFilter.products.published"];
          category?: parameters["rowFilter.products.category"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["products"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** products */
          products?: definitions["products"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          created_at?: parameters["rowFilter.products.created_at"];
          name?: parameters["rowFilter.products.name"];
          price?: parameters["rowFilter.products.price"];
          stock?: parameters["rowFilter.products.stock"];
          discount?: parameters["rowFilter.products.discount"];
          published?: parameters["rowFilter.products.published"];
          category?: parameters["rowFilter.products.category"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          created_at?: parameters["rowFilter.products.created_at"];
          name?: parameters["rowFilter.products.name"];
          price?: parameters["rowFilter.products.price"];
          stock?: parameters["rowFilter.products.stock"];
          discount?: parameters["rowFilter.products.discount"];
          published?: parameters["rowFilter.products.published"];
          category?: parameters["rowFilter.products.category"];
        };
        body: {
          /** products */
          products?: definitions["products"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/orders": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          created_at?: parameters["rowFilter.orders.created_at"];
          /** the order owner */
          owner?: parameters["rowFilter.orders.owner"];
          type?: parameters["rowFilter.orders.type"];
          status?: parameters["rowFilter.orders.status"];
          /** the customer's purchases */
          purchases?: parameters["rowFilter.orders.purchases"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["orders"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** orders */
          orders?: definitions["orders"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          created_at?: parameters["rowFilter.orders.created_at"];
          /** the order owner */
          owner?: parameters["rowFilter.orders.owner"];
          type?: parameters["rowFilter.orders.type"];
          status?: parameters["rowFilter.orders.status"];
          /** the customer's purchases */
          purchases?: parameters["rowFilter.orders.purchases"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          created_at?: parameters["rowFilter.orders.created_at"];
          /** the order owner */
          owner?: parameters["rowFilter.orders.owner"];
          type?: parameters["rowFilter.orders.type"];
          status?: parameters["rowFilter.orders.status"];
          /** the customer's purchases */
          purchases?: parameters["rowFilter.orders.purchases"];
        };
        body: {
          /** orders */
          orders?: definitions["orders"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/customers": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          name?: parameters["rowFilter.customers.name"];
          email?: parameters["rowFilter.customers.email"];
          phone?: parameters["rowFilter.customers.phone"];
          status?: parameters["rowFilter.customers.status"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["customers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          name?: parameters["rowFilter.customers.name"];
          email?: parameters["rowFilter.customers.email"];
          phone?: parameters["rowFilter.customers.phone"];
          status?: parameters["rowFilter.customers.status"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          created_at?: parameters["rowFilter.customers.created_at"];
          name?: parameters["rowFilter.customers.name"];
          email?: parameters["rowFilter.customers.email"];
          phone?: parameters["rowFilter.customers.phone"];
          status?: parameters["rowFilter.customers.status"];
        };
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  products: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp without time zone
     * @default (now() AT TIME ZONE 'utc'::text)
     */
    created_at?: string;
    /** Format: text */
    name: string;
    /** Format: real */
    price: number;
    /**
     * Format: integer
     * @default 0
     */
    stock: number;
    /** Format: real */
    discount: number;
    /**
     * Format: boolean
     * @default false
     */
    published: boolean;
    /** Format: character varying */
    category: string;
  };
  /** @description dashboard database */
  orders: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description the order owner
     *
     * Note:
     * This is a Foreign Key to `customers.id`.<fk table='customers' column='id'/>
     */
    owner: number;
    /** Format: text */
    type: string;
    /**
     * Format: boolean
     * @default false
     */
    status?: boolean;
    /**
     * Format: ARRAY
     * @description the customer's purchases
     */
    purchases: unknown[];
  };
  customers: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name?: string;
    /** Format: text */
    email?: string;
    /** Format: text */
    phone?: string;
    /** Format: boolean */
    status?: boolean;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description products */
  "body.products": definitions["products"];
  /** Format: bigint */
  "rowFilter.products.id": string;
  /** Format: timestamp without time zone */
  "rowFilter.products.created_at": string;
  /** Format: text */
  "rowFilter.products.name": string;
  /** Format: real */
  "rowFilter.products.price": string;
  /** Format: integer */
  "rowFilter.products.stock": string;
  /** Format: real */
  "rowFilter.products.discount": string;
  /** Format: boolean */
  "rowFilter.products.published": string;
  /** Format: character varying */
  "rowFilter.products.category": string;
  /** @description orders */
  "body.orders": definitions["orders"];
  /** Format: bigint */
  "rowFilter.orders.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.orders.created_at": string;
  /**
   * Format: bigint
   * @description the order owner
   */
  "rowFilter.orders.owner": string;
  /** Format: text */
  "rowFilter.orders.type": string;
  /** Format: boolean */
  "rowFilter.orders.status": string;
  /**
   * Format: ARRAY
   * @description the customer's purchases
   */
  "rowFilter.orders.purchases": string;
  /** @description customers */
  "body.customers": definitions["customers"];
  /** Format: bigint */
  "rowFilter.customers.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.customers.created_at": string;
  /** Format: text */
  "rowFilter.customers.name": string;
  /** Format: text */
  "rowFilter.customers.email": string;
  /** Format: text */
  "rowFilter.customers.phone": string;
  /** Format: boolean */
  "rowFilter.customers.status": string;
}

export interface operations {}

export interface external {}
